{"version":3,"sources":["TodoItem.js","constants/style.js","useTodos.js","useInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","theme","colors","red_300","size","$isDone","TodoButtonWrapper","Button","button","TodoItem","className","todo","handleDeleteTodo","handleToggleIsDone","data-todo-id","id","isDone","content","onClick","useTodos","useRef","useState","value","setValue","handleChange","e","target","useInput","todoData","window","localStorage","getItem","length","JSON","parse","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","handleButtonClick","map","filter","App","style","width","minHeight","background","margin","paddingTop","paddingBottom","display","flexDirection","alignItems","padding","fontSize","fontWeight","color","type","placeholder","onChange","marginBottom","height","border","borderRadius","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","red_400","red_500","document","getElementById"],"mappings":"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","file":"static/js/main.cbce7d0d.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { MEDIA_QUERY_SM, MEDIA_QUERY_MD, MEDIA_QUERY_LG } from './constants/style';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TodoItemWrapper= styled.div`\n  width: 90%;\n  background: #E8F6EF;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 16px;\n  border-radius: 4px;\n\n  & + & {\n    margin-top: 24px;\n  }\n`\n\nconst TodoContent = styled.div`\n  color: ${props => props.theme.colors.red_300};\n  font-size: 12px;\n\n  ${props => props.size === 'XL' && `\n    font-size: 20px;\n  `}\n\n  ${props => props.$isDone && `\n    text-decoration: line-through;\n  `}\n`\n\nconst TodoButtonWrapper = styled.div``\n\nconst Button = styled.button`\n  padding: 4px;\n  color: green;\n  font-size: 20px;\n\n  ${MEDIA_QUERY_SM} {\n    font-size: 16px;\n  }\n\n  ${MEDIA_QUERY_MD} {\n    font-size: 14px;\n  }\n\n  ${MEDIA_QUERY_LG} {\n    font-size: 12px;\n  }\n\n  &:hover {\n    color: red;\n  }\n\n  & + & {\n    margin-left: 4px;\n  }\n`\n\nexport default function TodoItem ({ className, size, todo, handleDeleteTodo, handleToggleIsDone }) {\n  const handleToggleClick = () => {\n    handleToggleIsDone(todo.id)\n  }\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id)\n  }\n  return (\n    <TodoItemWrapper className={className} data-todo-id={todo.id}>\n      <TodoContent $isDone={todo.isDone} size={size}>{todo.content}</TodoContent>\n      <TodoButtonWrapper>\n        <Button onClick={handleToggleClick}>\n          {todo.isDone ? 'Not yet':'Done'}\n        </Button>\n        <Button onClick={handleDeleteClick}>Delete</Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  )\n}\n\nTodoItem.propTypes = {\n  className: PropTypes.string, \n  size: PropTypes.string, \n  todo: PropTypes.shape({\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n    id: PropTypes.number,\n  }), \n  handleDeleteTodo: PropTypes.func, \n  handleToggleIsDone: PropTypes.func,\n}","export const MEDIA_QUERY_SM = '@media screen and (min-width: 375px)'\nexport const MEDIA_QUERY_MD = '@media screen and (min-width: 768px)'\nexport const MEDIA_QUERY_LG = '@media screen and (min-width: 1000px)'","import { useState, useEffect, useRef } from 'react';\nimport useInput from './useInput';\n\nfunction writeTodosToLocalStorage(todos) {\n    window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n    const id = useRef(1);\n    const { value, setValue, handleChange } = useInput();\n    const [todos, setTodos] = useState(() => {\n        let todoData = window.localStorage.getItem(\"todos\") || \"\";\n        if (todoData.length > 2) {\n            todoData = JSON.parse(todoData);\n            id.current = todoData[0].id + 1;\n        } else {\n            todoData = [];\n        }\n        return todoData;\n    });\n\n    const handleButtonClick = () => {\n        setTodos([\n            {\n            id: id.current,\n            content: value\n            }, \n            ...todos,\n        ]);\n        setValue('')\n        id.current++\n    };\n\n    const handleToggleIsDone = (id) => {\n        setTodos(\n            todos.map((todo) => {\n            if (todo.id !== id) return todo\n            return {\n                ...todo,\n                isDone: !todo.isDone,\n            };\n            })\n        );\n    };\n\n    const handleDeleteTodo = id => {\n        setTodos(todos.filter((todo) => todo.id !== id))\n    }\n    \n    useEffect(()=> {\n        writeTodosToLocalStorage(todos);\n    }, [todos]);\n\n    return {\n        todos,\n        setTodos,\n        id,\n        handleButtonClick,\n        handleToggleIsDone,\n        handleDeleteTodo,\n        value, \n        setValue, \n        handleChange\n    }\n}","import { useState } from 'react';\n\nexport default function useInput() {\n    const [value, setValue] = useState('');\n    const handleChange = e => {\n        setValue(e.target.value)\n    }\n    return {\n        value,\n        setValue,\n        handleChange\n    }\n}","import React from 'react';\nimport TodoItem from './TodoItem';\nimport useTodos from './useTodos';\n\n\nfunction App() {\n  const {\n      todos,\n      handleButtonClick,\n      handleToggleIsDone,\n      handleDeleteTodo,\n      value,\n      handleChange\n  } = useTodos();\n\n  return (\n    <div className=\"container\" style={{width: '100%', minHeight: '100vh', background: '#4C4C6D'}}>\n      <div className=\"App\" style={{ \n        width: '70%',\n        margin: '0 auto',\n        paddingTop: '10%',\n        paddingBottom: '10%', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center'}}\n      >\n        <div style={{ padding: '20px', fontSize: '32px',fontWeight: 'bold', color: '#FFE194'}}>MY TO-DO LIST</div>\n        <input type=\"text\" placeholder=\"What do you want to do?\" value={value} onChange={handleChange} style={{ marginBottom: '10px' , width: '50%', height: '30px'}}/>\n        <button onClick={handleButtonClick} style={{ width: '51%', height: '50px', marginBottom: '10px', background: '#FFE194', border: 'none', borderRadius: '2px', cursor: 'pointer'}}>Add todo</button>\n        {\n          todos.map(todo => (<TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone}/>))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components'\n\nconst theme = {\n  colors: {\n    red_300: '#220000',\n    red_400: '#440000',\n    red_500: '#660000',\n  }\n}\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}